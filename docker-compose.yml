version: '3.8'

services:
  telegram_bot:
    build:
      context: .
      dockerfile: telebot/Dockerfile
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=postgresql://monopoly:password@postgres:5432/monopoly_db
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://backend:8000
      - WEBAPP_URL=${WEBAPP_URL}
    depends_on:
      - postgres
      - redis
      - backend
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - DATABASE_URL=postgresql://monopoly:password@postgres:5432/monopoly_db
      - REDIS_URL=redis://redis:6379
      - DEBUG=${DEBUG:-false}
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=monopoly_db
      - POSTGRES_USER=monopoly
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: